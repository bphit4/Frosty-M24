<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Frosty.Core.Converters;assembly=FrostyCore"
                    xmlns:editors1="clr-namespace:Frosty.Core.Controls.Editors;assembly=FrostyCore"
                    xmlns:controls="clr-namespace:Frosty.Controls;assembly=FrostyControls"
                    xmlns:controls1="clr-namespace:Frosty.Core.Controls;assembly=FrostyCore"
                    xmlns:editors="clr-namespace:BlueprintEditorPlugin.Models.Editor.Items"
                    xmlns:editor="clr-namespace:BlueprintEditorPlugin.Models.Editor">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/BlueprintEditorPlugin;component/Themes/Generic.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    
    <!--Pointer ref editor control-->
    <Style TargetType="{x:Type editors:BlueprintPointerRefControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editors:BlueprintPointerRefControl}">
                    <ControlTemplate.Resources>
                        <converters:StringToBitmapSourceConverter x:Key="stringToBitmapConverter"/>
                        <editors1:ClassTypeToStringConverter x:Key="classTypeToStringConverter"/>
                        <converters:AssetEntryToBitmapSourceConverter x:Key="AssetEntryToBitmapSourceConverter"/>
                        <editors:RefTypeToStringConverter x:Key="RefTypeToStringConverter"/>
                        <Style x:Key="MenuButtonStyle" TargetType="{x:Type Button}">
                            <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Padding" Value="2"/>
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type Button}">
                                        <Border x:Name="buttonBorder" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="0">
                                            <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="buttonBorder" Property="Background" Value="#FF707070" />
                                            </Trigger>
                                            <Trigger Property="IsPressed" Value="True">
                                                <Setter TargetName="buttonBorder" Property="Background" Value="#FF585858" />
                                            </Trigger>
                                            <Trigger Property="IsEnabled" Value="False">
                                                <Setter TargetName="content" Property="Opacity" Value="0.5"/>
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ControlTemplate.Resources>
                    
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition x:Name="buttonColumn" Width="19"/>
                        </Grid.ColumnDefinitions>

                        <ComboBox x:Name="PART_Popup" Grid.Column="0" Grid.ColumnSpan="2" VirtualizingPanel.VirtualizationMode="Recycling">
                            <ComboBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel/>
                                </ItemsPanelTemplate>
                            </ComboBox.ItemsPanel>
                            
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Height="18">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition MinWidth="260"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Column="0" Text="{Binding Path=., Converter={StaticResource classTypeToStringConverter}, ConverterParameter=Name}" Foreground="{StaticResource FontColor}" VerticalAlignment="Center" FontFamily="MS Reference Sans Serif" TextTrimming="CharacterEllipsis"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Path=., Converter={StaticResource classTypeToStringConverter}, ConverterParameter=Guid}" Foreground="{StaticResource FontColor}" VerticalAlignment="Center" FontFamily="Consolas" HorizontalAlignment="Right"/>
                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ComboBoxItem}">
                                    <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="{StaticResource SubItemHighlight}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                            
                            <ComboBox.Template>
                                <ControlTemplate TargetType="{x:Type ComboBox}">
                                    <Grid>
                                        <Popup x:Name="PART_PopupMenu" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Focusable="False">
                                            <Border x:Name="dropDownBorder" Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{StaticResource ControlBackground}" BorderThickness="1">
                                                <Grid>
                                                    <StackPanel Grid.Row="0" Orientation="Vertical" MaxHeight="330" Background="{StaticResource ListBackground}">
                                                        <Button x:Name="PART_ClearButton" Content="Clear assigned object" Style="{StaticResource MenuButtonStyle}" FontFamily="MS Reference Sans Serif" Height="22"/>
                                                        <Button x:Name="PART_OpenButton" Content="Open asset" Style="{StaticResource MenuButtonStyle}" FontFamily="MS Reference Sans Serif" Height="22"/>
                                                        <Button x:Name="PART_FindButton" Content="Find in data explorer" Style="{StaticResource MenuButtonStyle}" FontFamily="MS Reference Sans Serif" Height="22"/>
                                                        <Button x:Name="PART_CreateButton" Content="Create new ..." Style="{StaticResource MenuButtonStyle}" FontFamily="MS Reference Sans Serif" Height="22"/>
                                                        
                                                        <Border x:Name="PART_Separator" Height="22">
                                                            <Separator Margin="1,0,1,0"/>
                                                        </Border>

                                                        <controls:FrostyWatermarkTextBox x:Name="PART_FilterTextBox" Height="24" Margin="1,0,1,1" WatermarkText="Filter" VerticalContentAlignment="Center" BorderThickness="1"/>

                                                        <Border x:Name="PART_TBBorder" Height="22">
                                                            <TextBlock x:Name="PART_TextBlock" VerticalAlignment="Center" Text="Select Class" Margin="4,0,0,0" Foreground="{StaticResource FontColor}" Opacity="0.5" FontFamily="MS Reference Sans Serif"/>
                                                        </Border>

                                                        <ScrollViewer x:Name="DropDownScrollViewer" MaxHeight="198">
                                                            <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled" HorizontalAlignment="Stretch">
                                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                            </Grid>
                                                        </ScrollViewer>
                                                    </StackPanel>
                                                </Grid>
                                            </Border>
                                        </Popup>
                                    </Grid>
                                </ControlTemplate>
                            </ComboBox.Template>
                        </ComboBox>

                        <Grid Grid.Column="0" x:Name="refStackPanel">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" x:Name="PART_AssignButton" Width="12" Height="12" Padding="0" VerticalAlignment="Center" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Left" Margin="0 0 4 0" ToolTip="Assign from selected asset" IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource TemplatedParent}}">
                                <Button.Content>
                                    <Path Margin="0 0 0 0" Width="10" Height="10" Fill="#f7f7f7" Stretch="Uniform" Data="{Binding Path=Data, Source={StaticResource AssignIcon}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </Button.Content>
                            </Button>

                            <Image x:Name="PART_TypeImage" Grid.Column="1" Width="12" Height="12" Margin="0,0,4,0" ToolTip="{Binding Path=RefType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource RefTypeToStringConverter}}" Source="{Binding Path=RefType, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource AssetEntryToBitmapSourceConverter}}"/>

                            <TextBlock x:Name="PART_RefName" Grid.Column="2" Text="{Binding Path=RefValueName, RelativeSource={RelativeSource TemplatedParent}}" ToolTip="{Binding Path=RefTooltip, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis"/>
                            <TextBlock Grid.Column="3" x:Name="refValuePath" VerticalAlignment="Center" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="4 0 0 0" Opacity="0.5">
                                <TextBlock.Text>
                                    <Binding Path="RefValuePath" RelativeSource="{RelativeSource TemplatedParent}" StringFormat="({0})"/>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>

                        <Button x:Name="PART_MoreOptionsButton" Grid.Column="1" Margin="1" ToolTip="Show more options" Width="17" IsEnabled="{Binding Path=IsEnabled, RelativeSource={RelativeSource TemplatedParent}}">
                            <Button.Content>
                                <Image Source="/FrostyEditor;component/Images/More.png" Width="14"/>
                            </Button.Content>
                        </Button>

                    </Grid>
                    
                    <ControlTemplate.Triggers>
                        <Trigger Property="RefValuePath" Value="">
                            <Setter TargetName="refValuePath" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_TypeImage" Property="Opacity" Value="0.5"/>
                            <Setter TargetName="PART_RefName" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Array Editor Control-->
    <Style TargetType="{x:Type editors:BlueprintArrayControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editors:BlueprintArrayControl}">
                    <Grid Height="19">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="17"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="19"/>
                            <ColumnDefinition Width="19"/>
                        </Grid.ColumnDefinitions>

                        <Path x:Name="path" Grid.Column="0" Width="14" Height="16" HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="None" Fill="#f7f7f7" Data="
                              M0 0 L0 0 12 0 12 2 0 2 Z
                              M0 4 L0 4 12 4 12 6 0 6 Z
                              M0 8 L0 8 12 8 12 10 0 10 Z
                              M0 12 L0 12 12 12 12 14 0 14 Z
                              "/>
                        <TextBlock Grid.Column="1" TextTrimming="CharacterEllipsis" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}">
                                    <Binding.StringFormat>({0} items)</Binding.StringFormat>
                                </Binding>
                            </TextBlock.Text>
                        </TextBlock>

                        <Button x:Name="PART_RemoveButton" Grid.Column="2" Margin="1" IsEnabled="True" ToolTip="Remove all items" Width="17" Padding="0">
                            <Button.Content>
                                <Path Width="10" Height="10" Fill="#f7f7f7" Stretch="Uniform" Data="{Binding Path=Data, Source={StaticResource RemoveButtonIcon}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Button.Content>
                        </Button>
                        <Button x:Name="PART_AddButton" Grid.Column="3" Margin="1" ToolTip="Add new item" Width="17">
                            <Button.Content>
                                <Path Width="10" Height="10" Fill="#f7f7f7" Stretch="Uniform" Data="{Binding Path=Data, Source={StaticResource AddButtonIcon}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            </Button.Content>
                        </Button>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Fill" TargetName="path" Value="#595959"/>
                        </Trigger>
                        <Trigger Property="Value" Value="0">
                            <Setter TargetName="PART_RemoveButton" Property="IsEnabled" Value="False"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!--Property grid item-->
    <Style x:Key="blueprintPropertyGridTreeViewItem" TargetType="{x:Type editor:BlueprintPropertyGridItem}">
        <Style.Resources>
            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="TextTrimming" Value="CharacterEllipsis"/>
                <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
                <Setter Property="VerticalAlignment" Value="Center"/>
            </Style>
            <Style TargetType="{x:Type CheckBox}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type CheckBox}">
                            <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="checkBoxBorder" Width="13" Height="13" BorderBrush="#868686" BorderThickness="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <Grid x:Name="markGrid">
                                        <Path x:Name="optionMark" Width="12" Height="12" Fill="#fafafa" Data="M1 8 L1 8 2 6 5 8 7 1 10 3 6 10" Opacity="0"/>
                                        <Rectangle x:Name="indeterminateMark" Fill="{StaticResource FontColor}" Margin="2" Opacity="0"/>
                                    </Grid>
                                </Border>
                                <ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="True">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="0"/>
                                </Trigger>
                                <Trigger Property="IsChecked" Value="{x:Null}">
                                    <Setter Property="Opacity" TargetName="optionMark" Value="0"/>
                                    <Setter Property="Opacity" TargetName="indeterminateMark" Value="1"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="checkBoxBorder" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TextBoxBase}">
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Background" Value="{StaticResource WindowBackground}"/>
                <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
                <Setter Property="CaretBrush" Value="{StaticResource FontColor}"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <Border x:Name="border" BorderBrush="{StaticResource ControlBackground}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                                <Grid>
                                    <ScrollViewer x:Name="PART_ContentHost" Focusable="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Padding="0" Visibility="Hidden"/>
                                    <TextBlock x:Name="PART_EllipsedText" Margin="2,0,0,0" VerticalAlignment="Center" Text="{Binding Path=Text, RelativeSource={RelativeSource AncestorType={x:Type TextBox}}}" TextTrimming="CharacterEllipsis" TextWrapping="NoWrap" Focusable="True" Cursor="IBeam"/>
                                </Grid>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsKeyboardFocused" Value="True">
                                    <Setter Property="Visibility" TargetName="PART_ContentHost" Value="Visible"/>
                                    <Setter Property="Visibility" TargetName="PART_EllipsedText" Value="Hidden"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource {x:Type TextBoxBase}}">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
                <Setter Property="Margin" Value="-2 0"/>
                <Setter Property="CaretBrush" Value="{StaticResource FontColor}"/>
                <Setter Property="SelectionBrush" Value="{StaticResource ControlBackground}"/>
                <Setter Property="SelectionOpacity" Value="0.5"/>
            </Style>
            <Style TargetType="{x:Type ComboBox}">
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Focusable" Value="False"/>
                <Setter Property="Padding" Value="0"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Border BorderBrush="#868686" BorderThickness="{TemplateBinding BorderThickness}" Background="{StaticResource WindowBackground}">
                                <Grid x:Name="templateRoot" SnapsToDevicePixels="True">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="19"/>
                                    </Grid.ColumnDefinitions>
                                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Margin="1" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" Focusable="False">
                                        <Border x:Name="dropDownBorder" Width="{Binding ActualWidth, RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="200">
                                            <ScrollViewer x:Name="DropDownScrollViewer">
                                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                        <Rectangle x:Name="opaqueRect" Fill="{StaticResource ListBackground}" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                                    </Canvas>
                                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                                </Grid>
                                            </ScrollViewer>
                                        </Border>
                                    </Popup>
                                    <ToggleButton x:Name="toggleButton" Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" VerticalAlignment="Stretch">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border x:Name="border" Background="{StaticResource ControlBackground}" Margin="1">
                                                    <Path Width="17" Height="17" Fill="White" Data="M5 6 L5 6 13 6 9 11 Z"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ControlHighlight}"/>
                                                    </Trigger>
                                                    <Trigger Property="IsPressed" Value="True">
                                                        <Setter Property="Background" TargetName="border" Value="{StaticResource ControlPressed}"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>

                                    <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False"/>

                                    <ToggleButton x:Name="invisToggleButton" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Focusable="False">
                                        <ToggleButton.Template>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <Border Background="Transparent"/>
                                            </ControlTemplate>
                                        </ToggleButton.Template>
                                    </ToggleButton>
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style TargetType="{x:Type Button}">
                <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
                <Setter Property="Background" Value="{StaticResource ControlBackground}"/>
                <Setter Property="Padding" Value="2"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="buttonBorder" Background="{TemplateBinding Background}" BorderThickness="0">
                                <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="{TemplateBinding Padding}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter TargetName="buttonBorder" Property="Background" Value="#FF707070" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter TargetName="buttonBorder" Property="Background" Value="#FF585858" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="content" Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </Style.Resources>
        <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded}"/>
        <Setter Property="ItemsSource" Value="{Binding Path=Children}"/>
        <Setter Property="IsTabStop" Value="True"/>
        <Setter Property="Focusable" Value="True"/>
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="Continue"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:BlueprintPropertyGridItem}">
                    <ControlTemplate.Resources>
                        <controls1:FrostyItemValuePaddingIncreaser x:Key="FrostyArrayPaddingIncreaser"/>
                        <controls1:FrostyArrayToVisibilityConverter x:Key="FrostyArrayToVisibilityConverter"/>
                        <controls1:FrostyValueModifiedConverter x:Key="FrostyValueModifiedConverter"/>
                    </ControlTemplate.Resources>
                    <Grid  x:Name="mainGrid" MinHeight="19" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="19"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Standard -->
                        <Grid x:Name="g1">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{Binding ActualWidth, ElementName=NameBorder}"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Path=Padding.Left, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Grid.Column="1" x:Name="PART_Expander" ClickMode="Press" MaxWidth="16" HorizontalAlignment="Center" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=HasItems, Converter={StaticResource FrostyArrayToVisibilityConverter}}" Focusable="False" Template="{StaticResource itemToggleButton}" VerticalAlignment="Top" Margin="0 1 0 0"/>

                                <Grid Grid.Column="2">
                                    <ContentControl x:Name="PART_Name" Margin="2,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="{Binding Path=Padding, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Focusable="False">
                                        <controls1:FrostyHightlightTextBlock Text="{Binding Path=DisplayName}" HighlightText="{Binding Path=FilterText, RelativeSource={RelativeSource AncestorType={x:Type editor:BlueprintPropertyGrid}}}" FontFamily="Global User Interface" FontWeight="{Binding Path=IsModified, Converter={StaticResource FrostyValueModifiedConverter}}" Foreground="#DADADA"/>
                                    </ContentControl>
                                </Grid>

                                <Grid.Style>
                                    <Style TargetType="{x:Type Grid}">
                                        <Setter Property="Background" Value="Transparent"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Background" Value="{StaticResource SubItemHighlight}"/>
                                            </Trigger>
                                            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}" Value="True">
                                                <Setter Property="Background" Value="{StaticResource SubItemHighlight}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>

                            <Grid Grid.Column="1" VerticalAlignment="Top" Height="19">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition x:Name="arrayColumn" Width="0"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentControl x:Name="PART_Value" Margin="6,0,0,0" VerticalAlignment="Center" Focusable="False" Foreground="#f7f7f7"/>
                                    <Button x:Name="PART_ArrayRemoveButton" Grid.Column="1" Width="17" Margin="1" Visibility="Collapsed" Padding="0" ToolTip="Remove item">
                                        <Button.Content>
                                            <Path Width="10" Height="10" Fill="#f7f7f7" Stretch="Uniform" Data="{Binding Path=Data, Source={StaticResource RemoveButtonIcon}}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Button.Content>
                                    </Button>
                                </Grid>
                            </Grid>

                        </Grid>

                        <!-- Category -->
                        <Grid x:Name="g2" Visibility="Collapsed">
                            <Grid Background="#3f3f3f">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="{Binding Path=Padding.Left, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}"/>
                                    <ColumnDefinition Width="24"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ToggleButton Grid.Column="1" ClickMode="Press" Width="9" Height="9" VerticalAlignment="Center" HorizontalAlignment="Center" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding Path=HasItems, Converter={StaticResource FrostyArrayToVisibilityConverter}}" Focusable="False" Template="{StaticResource categoryToggleButton}"/>

                                <Grid Grid.Column="2">
                                    <ContentControl Margin="2,0,2,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Padding="{Binding Path=Padding, RelativeSource={RelativeSource AncestorType={x:Type ContentControl}}}" Focusable="False">
                                        <TextBlock Text="{Binding Path=DisplayName}" FontFamily="Global User Interface" Foreground="#DADADA" FontWeight="Bold"/>
                                    </ContentControl>
                                </Grid>
                            </Grid>
                        </Grid>

                        <!-- Children -->
                        <ContentControl Grid.ColumnSpan="2" Grid.Row="1" Grid.Column="0">
                            <ContentControl.Padding>
                                <MultiBinding Converter="{StaticResource FrostyArrayPaddingIncreaser}">
                                    <Binding Path="Padding" RelativeSource="{RelativeSource AncestorType={x:Type ContentControl}}"/>
                                    <Binding Path="IsCategory"/>
                                </MultiBinding>
                            </ContentControl.Padding>
                            <ItemsPresenter x:Name="ItemsHost" UseLayoutRounding="True" Visibility="Collapsed" KeyboardNavigation.IsTabStop="False"/>
                        </ContentControl>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsHidden}" Value="True">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter Property="Visibility" TargetName="ItemsHost" Value="Visible"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsCategory}" Value="True">
                            <Setter TargetName="g1" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Value" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="g2" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsArrayChild}" Value="True"/>
                                <Condition Binding="{Binding Path=Parent.IsEnabled}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <MultiDataTrigger.Setters>
                                <Setter TargetName="arrayColumn" Property="Width" Value="19"/>
                                <Setter TargetName="PART_ArrayRemoveButton" Property="Visibility" Value="Visible"/>
                            </MultiDataTrigger.Setters>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Property Grid -->
    <Style TargetType="{x:Type editor:BlueprintPropertyGrid}">
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type editor:BlueprintPropertyGrid}">
                    <ControlTemplate.Resources>
                        <controls1:FrostyObjectTypeConverter x:Key="FrostyObjectTypeConverter"/>
                        <controls1:FrostyClassNameConverter x:Key="FrostyClassNameConverter"/>
                    </ControlTemplate.Resources>
                    <Border BorderBrush="{StaticResource ControlBackground}" BorderThickness="0,2,0,0">
                        <Grid Background="#141414">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="26"/>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition/>
                                <RowDefinition x:Name="classViewRow" Height="80"/>
                            </Grid.RowDefinitions>

                            <DockPanel Grid.Row="0" LastChildFill="True">
                                <Border Background="Transparent" Margin="1,1,1,1">
                                    <controls:FrostyWatermarkTextBox x:Name="PART_FilterTextBox" WatermarkText="Filter" BorderThickness="1" Height="24" HorizontalAlignment="Stretch" VerticalContentAlignment="Center" Padding="4,0,0,0"/>
                                </Border>
                            </DockPanel>

                            <Grid Grid.Row="1">
                                <ProgressBar x:Name="PART_FilterProgressBar" HorizontalAlignment="Stretch" Height="3" IsIndeterminate="True" Visibility="Collapsed"/>
                            </Grid>

                            <Grid Grid.Row="2">
                                <editor:BlueprintPropertyGridTreeView x:Name="tv" Grid.ColumnSpan="2" VirtualizingPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Standard" ScrollViewer.IsDeferredScrollingEnabled="False" Background="Transparent" Padding="0" VerticalAlignment="Top" ItemContainerStyle="{StaticResource blueprintPropertyGridTreeViewItem}" IsTabStop="True" Focusable="True" KeyboardNavigation.IsTabStop="True" KeyboardNavigation.TabNavigation="Continue">
                                    <editor:BlueprintPropertyGridTreeView.Template>
                                        <ControlTemplate TargetType="{x:Type TreeView}">
                                            <Border x:Name="Bd" SnapsToDevicePixels="True">
                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="{Binding Path=InitialWidth, RelativeSource={RelativeSource AncestorType={x:Type editor:BlueprintPropertyGrid}}}" x:Name="resizeColumn"/>
                                                        <ColumnDefinition Width="*"/>
                                                    </Grid.ColumnDefinitions>
                                                    <Border x:Name="NameBorder" Background="#292929" />
                                                    <Border Grid.Column="1" Background="#141414"/>
                                                    <Grid Grid.ColumnSpan="2">
                                                        <Grid.RowDefinitions>
                                                            <RowDefinition Height="*"/>
                                                            <RowDefinition Height="2"/>
                                                        </Grid.RowDefinitions>
                                                        <ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="False" Focusable="False" HorizontalScrollBarVisibility="Disabled" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
                                                            <ItemsPresenter/>
                                                        </ScrollViewer>
                                                        <Border Grid.Row="1" Height="2" HorizontalAlignment="Stretch" Background="#3f3f3f"/>
                                                    </Grid>
                                                    <GridSplitter HorizontalAlignment="Left" Grid.Column="1" VerticalAlignment="Stretch" Width="2" Background="#3f3f3f"/>
                                                </Grid>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                                                </Trigger>
                                                <Trigger Property="VirtualizingPanel.IsVirtualizing" Value="True">
                                                    <Setter Property="CanContentScroll" TargetName="_tv_scrollviewer_" Value="True"/>
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </editor:BlueprintPropertyGridTreeView.Template>
                                </editor:BlueprintPropertyGridTreeView>
                                <Border x:Name="PART_FilterInProgresBorder" Background="{StaticResource ControlBackground}" Opacity="0.25" Visibility="Collapsed">
                                    <Grid>
                                        <TextBlock Text="Filter in progress" FontFamily="Global User Interface" FontSize="70" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                    </Grid>
                                </Border>
                            </Grid>

                            <Grid x:Name="classViewGrid" Grid.Row="3">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="19"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>

                                <Border Background="#454545">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*"/>
                                            <ColumnDefinition Width="18"/>
                                        </Grid.ColumnDefinitions>

                                        <TextBlock FontWeight="Bold" Margin="7 0 0 0" VerticalAlignment="Top">
                                            <TextBlock.Text>
                                                <MultiBinding Converter="{StaticResource FrostyObjectTypeConverter}" ConverterParameter="Name">
                                                    <Binding Path="Object" RelativeSource="{RelativeSource TemplatedParent}"/>
                                                    <Binding Path="SelectedItem" ElementName="tv"/>
                                                </MultiBinding>
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <Path Grid.Column="1" Fill="White" Width="11" Height="11" Data="m 4 9 h 2 v 2 H 4 Z M 1 4 V 1 H 2 V 0 H 8 V 1 H 9 V 6 H 8 V 7 H 6 V 8 H 4 V 6 H 5 V 5 H 7 V 2 H 3 v 2 z"/>
                                    </Grid>
                                </Border>

                                <Grid Grid.Row="1">
                                    <TextBox Padding="4" IsReadOnly="True" VerticalScrollBarVisibility="Auto" TextWrapping="Wrap">
                                        <TextBox.Text>
                                            <MultiBinding Converter="{StaticResource FrostyObjectTypeConverter}" ConverterParameter="Description">
                                                <Binding Path="Object" RelativeSource="{RelativeSource TemplatedParent}" Mode="OneWay"/>
                                                <Binding Path="SelectedItem" ElementName="tv" Mode="OneWay"/>
                                            </MultiBinding>
                                        </TextBox.Text>
                                    </TextBox>
                                </Grid>
                            </Grid>

                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ClassViewVisible" Value="False">
                            <Setter Property="Height" TargetName="classViewRow" Value="0"/>
                            <Setter Property="Visibility" TargetName="classViewGrid" Value="Collapsed"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>