<UserControl x:Class="BlueprintEditorPlugin.Windows.BlueprintGraphEditor"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:ctrl="clr-namespace:Frosty.Controls;assembly=FrostyControls"
             xmlns:nodify="https://miroiu.github.io/nodify"
             xmlns:models="clr-namespace:BlueprintEditorPlugin.Models"
             xmlns:controls="clr-namespace:Frosty.Core.Controls;assembly=FrostyCore"
             xmlns:types="clr-namespace:BlueprintEditorPlugin.Models.Types"
             xmlns:editor="clr-namespace:BlueprintEditorPlugin.Models.Editor"
             xmlns:nodeTypes="clr-namespace:BlueprintEditorPlugin.Models.Types.NodeTypes"
             xmlns:connections="clr-namespace:BlueprintEditorPlugin.Models.Connections"
             xmlns:utils="clr-namespace:BlueprintEditorPlugin.Utils"
             xmlns:options="clr-namespace:BlueprintEditorPlugin.Options"
             mc:Ignorable="d"
             d:DesignHeight="480" d:DesignWidth="720">
    
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/BlueprintEditorPlugin;component/Themes/Generic.xaml"/>
                <ResourceDictionary Source="/BlueprintEditorPlugin;component/Windows/PropertyGridWindow.xaml"/>
                <ResourceDictionary Source="pack://application:,,,/Nodify;component/Themes/Dark.xaml" />
            </ResourceDictionary.MergedDictionaries>
            
            <!--Stuff for drawing a grid-->
            <DrawingBrush x:Key="SmallGridLinesDrawingBrush"
                          TileMode="Tile"
                          ViewportUnits="Absolute"
                          Viewport="0 0 32 32"
                          Transform="{Binding ViewportTransform, ElementName=NodifyEditor}"
                          Drawing="{StaticResource SmallGridGeometry}" />

            <DrawingBrush x:Key="LargeGridLinesDrawingBrush"
                          TileMode="Tile"
                          ViewportUnits="Absolute"
                          Opacity="0.6"
                          Viewport="0 0 110 110"
                          Transform="{Binding ViewportTransform, ElementName=NodifyEditor}"
                          Drawing="{StaticResource LargeGridGeometry}" />
        </ResourceDictionary>
    </UserControl.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--Toolbox Property Grid and Blueprint Editor-->
        <Border Grid.Row="1" BorderBrush="{StaticResource SubItemPressed}" BorderThickness="2">
            <Grid Background="{StaticResource CanvasBackground}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="ToolboxCollum" Width="140" />
                    <ColumnDefinition />
                    <ColumnDefinition x:Name="PropertyGridCollum" Width="180" />
                </Grid.ColumnDefinitions>

                <!--Blueprint Editor(for editing connections)-->
                <Grid Grid.Column="1">
                    <!--Definition for the node editor itself-->
                    <nodify:NodifyEditor Grid.Column="0"
                                         ItemsSource="{Binding Nodes}"
                                         Connections="{Binding Connections}"
                                         PendingConnection="{Binding PendingConnection}"
                                         DisconnectConnectorCommand="{Binding DisconnectConnectorCommand}"
                                         SelectedItems="{Binding SelectedNodes}"
                                         Background="{StaticResource SmallGridLinesDrawingBrush}"
                                         ViewportLocation="{Binding ViewportLocation}"
                                         ViewportZoom="{Binding ViewportZoom}"
                                         EnableRealtimeSelection="False"
                                         x:Name="NodifyEditor">
                        <nodify:NodifyEditor.DataContext>
                            <editor:EditorViewModel x:Name="NodeEditor"/>
                        </nodify:NodifyEditor.DataContext>
                        
                        <nodify:NodifyEditor.Style>
                            <Style TargetType="{x:Type nodify:NodifyEditor}"
                                   BasedOn="{StaticResource {x:Type nodify:NodifyEditor}}">
                                <Style.Triggers>
                                    
                                    <!--Connection Definition(Changes how connections are displayed)-->
                                    <DataTrigger Binding="{Binding Source={x:Static utils:EditorUtils.CStyle}}"
                                                 Value="{x:Static options:ConnectionStyle.Curvy}">
                                        <Setter Property="ConnectionTemplate">
                                            <Setter.Value>
                                                <DataTemplate DataType="{x:Type connections:ConnectionViewModel}">
                                                    <Canvas>
                                                        <Path Stroke="{Binding StatusColor}"
                                                              StrokeThickness="{Binding StatusThickness}">
                                                            <Path.Data>
                                                                <PathGeometry>
                                                                    <PathGeometry.Figures>
                                                                        <PathFigure
                                                                            StartPoint="{Binding Source.Anchor}"
                                                                            IsClosed="False">
                                                                            <BezierSegment
                                                                                Point1="{Binding CurvePoint1}"
                                                                                Point2="{Binding CurvePoint2}"
                                                                                Point3="{Binding Target.Anchor}" />
                                                                        </PathFigure>
                                                                    </PathGeometry.Figures>
                                                                </PathGeometry>
                                                            </Path.Data>
                                                        </Path>
                                                        <Path Stroke="{Binding ConnectionColor}"
                                                              StrokeThickness="4">
                                                            <Path.Data>
                                                                <PathGeometry>
                                                                    <PathGeometry.Figures>
                                                                        <PathFigure
                                                                            StartPoint="{Binding Source.Anchor}"
                                                                            IsClosed="False">
                                                                            <BezierSegment
                                                                                Point1="{Binding CurvePoint1}"
                                                                                Point2="{Binding CurvePoint2}"
                                                                                Point3="{Binding Target.Anchor}" />
                                                                        </PathFigure>
                                                                    </PathGeometry.Figures>
                                                                </PathGeometry>
                                                            </Path.Data>
                                                        </Path>
                                                    </Canvas>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    
                                    <DataTrigger Binding="{Binding Source={x:Static utils:EditorUtils.CStyle}}"
                                                 Value="{x:Static options:ConnectionStyle.Straight}">
                                        <Setter Property="ConnectionTemplate">
                                            <Setter.Value>
                                                <DataTemplate DataType="{x:Type connections:ConnectionViewModel}">
                                                    <Canvas>
                                                        <Path Stroke="{Binding StatusColor}"
                                                              StrokeThickness="{Binding StatusThickness}">
                                                            <Path.Data>
                                                                <LineGeometry StartPoint="{Binding Source.Anchor}"
                                                                              EndPoint="{Binding Target.Anchor}" />
                                                            </Path.Data>
                                                        </Path>
                                                        <Path Stroke="{Binding ConnectionColor}"
                                                              StrokeThickness="4">
                                                            <Path.Data>
                                                                <LineGeometry StartPoint="{Binding Source.Anchor}"
                                                                              EndPoint="{Binding Target.Anchor}" />
                                                            </Path.Data>
                                                        </Path>
                                                    </Canvas>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    
                                    <DataTrigger Binding="{Binding Source={x:Static utils:EditorUtils.CStyle}}"
                                                 Value="{x:Static options:ConnectionStyle.StartStop}">
                                        <Setter Property="ConnectionTemplate">
                                            <Setter.Value>
                                                <DataTemplate DataType="{x:Type connections:ConnectionViewModel}">
                                                    <Canvas>
                                                        <Path Stroke="{Binding StatusColor}"
                                                              StrokeThickness="{Binding StatusThickness}">
                                                            <Path.Data>
                                                                <PathGeometry>
                                                                    <PathGeometry.Figures>
                                                                        <PathFigure StartPoint="{Binding Source.Anchor}"
                                                                            IsClosed="False">
                                                                            <LineSegment Point="{Binding CurvePoint1}"/>
                                                                            <LineSegment Point="{Binding CurvePoint2}"/>
                                                                            <LineSegment Point="{Binding Target.Anchor}"/>
                                                                        </PathFigure>
                                                                    </PathGeometry.Figures>
                                                                </PathGeometry>
                                                            </Path.Data>
                                                        </Path>
                                                        <Path Stroke="{Binding ConnectionColor}"
                                                              StrokeThickness="4">
                                                            <Path.Data>
                                                                <PathGeometry>
                                                                    <PathGeometry.Figures>
                                                                        <PathFigure StartPoint="{Binding Source.Anchor}"
                                                                            IsClosed="False">
                                                                            <LineSegment Point="{Binding CurvePoint1}"/>
                                                                            <LineSegment Point="{Binding CurvePoint2}"/>
                                                                            <LineSegment Point="{Binding Target.Anchor}"/>
                                                                        </PathFigure>
                                                                    </PathGeometry.Figures>
                                                                </PathGeometry>
                                                            </Path.Data>
                                                        </Path>
                                                    </Canvas>
                                                </DataTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </nodify:NodifyEditor.Style>

                        <!--Node Definition(Changes how nodes are displayed in ui)-->
                        <nodify:NodifyEditor.ItemTemplate>
                            <DataTemplate DataType="{x:Type nodeTypes:NodeBaseModel}">
                                <nodify:Node Header="{Binding Name}"
                                             Input="{Binding Inputs}"
                                             Output="{Binding Outputs}"
                                             HeaderBrush="{Binding HeaderColor}"
                                             ContentBrush="{StaticResource Background}"
                                             Background="{StaticResource Background}"
                                             BorderBrush="#555555"
                                             FontFamily="Consolas">

                                    <nodify:Node.InputConnectorTemplate>
                                        <DataTemplate DataType="{x:Type nodeTypes:InputViewModel}">
                                            <nodify:NodeInput Header="{Binding DisplayName}"
                                                              IsConnected="{Binding IsConnected}"
                                                              Anchor="{Binding Anchor, Mode=OneWayToSource}"
                                                              Background="{StaticResource Background}"
                                                              BorderBrush="{Binding ConnectionColor}"
                                                              Foreground="#000000" />
                                        </DataTemplate>
                                    </nodify:Node.InputConnectorTemplate>

                                    <nodify:Node.OutputConnectorTemplate>
                                        <DataTemplate DataType="{x:Type nodeTypes:OutputViewModel}">
                                            <nodify:NodeOutput Header="{Binding DisplayName}"
                                                               IsConnected="{Binding IsConnected}"
                                                               Anchor="{Binding Anchor, Mode=OneWayToSource}"
                                                               Background="{StaticResource Background}"
                                                               BorderBrush="{Binding ConnectionColor}"
                                                               Foreground="#000000" />
                                        </DataTemplate>
                                    </nodify:Node.OutputConnectorTemplate>

                                </nodify:Node>
                            </DataTemplate>
                        </nodify:NodifyEditor.ItemTemplate>

                        <!--This displays whenever the user is attempting to create a new connection-->
                        <nodify:NodifyEditor.PendingConnectionTemplate>
                            <DataTemplate DataType="{x:Type editor:PendingConnectionViewModel}">
                                <nodify:PendingConnection StartedCommand="{Binding StartCommand}"
                                                          CompletedCommand="{Binding FinishCommand}"
                                                          AllowOnlyConnectors="True"
                                                          EnableSnapping="True"
                                                          SourceAnchor="{Binding SourceAnchor, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                                          TargetAnchor="{Binding TargetAnchor, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                                                          IsVisible="False">
                                    <nodify:PendingConnection.Style>
                                        <Style TargetType="{x:Type nodify:PendingConnection}"
                                               BasedOn="{StaticResource {x:Type nodify:PendingConnection}}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="nodify:PendingConnection">
                                                        <Path Stroke="{Binding ConnectionColor}"
                                                              StrokeThickness="4">
                                                            <Path.Data>
                                                                <PathGeometry>
                                                                    <PathGeometry.Figures>
                                                                        <PathFigure StartPoint="{Binding SourceAnchor, RelativeSource={RelativeSource TemplatedParent}}" IsClosed="False">
                                                                            <BezierSegment Point1="{Binding CurvePoint1}"
                                                                                Point2="{Binding CurvePoint2}"
                                                                                Point3="{Binding TargetAnchor, RelativeSource={RelativeSource TemplatedParent}}"/>
                                                                        </PathFigure>
                                                                    </PathGeometry.Figures>
                                                                </PathGeometry>
                                                            </Path.Data>
                                                        </Path>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </nodify:PendingConnection.Style>
                                </nodify:PendingConnection>
                            </DataTemplate>
                        </nodify:NodifyEditor.PendingConnectionTemplate>

                        <!--Defines a variety of stylistic things relating to nodes(e.g border color)-->
                        <nodify:NodifyEditor.ItemContainerStyle>
                            <Style TargetType="{x:Type nodify:ItemContainer}"
                                   BasedOn="{StaticResource {x:Type nodify:ItemContainer}}">
                                <Setter Property="Location"
                                        Value="{Binding Location, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                <Setter Property="BorderThickness"
                                        Value="2">
                                </Setter>
                                <Setter Property="HighlightBrush"
                                        Value="{StaticResource NodeSelectedColor}">
                                </Setter>
                                <Setter Property="BorderBrush"
                                        Value="{StaticResource NodeBorderColor}">
                                </Setter>
                                <Setter Property="SelectedBrush"
                                        Value="{StaticResource NodeSelectedColor}">
                                </Setter>
                            </Style>
                        </nodify:NodifyEditor.ItemContainerStyle>

                    </nodify:NodifyEditor>
                </Grid>

                <!--Toolbox(for adding and removing nodes)-->
                <Grid Grid.Column="0" x:Name="Toolbox">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="85" />
                    </Grid.RowDefinitions>

                    <!--This contains a list of all of the types we can use and a filter box-->
                    <Border Grid.Row="0" BorderBrush="{StaticResource ScrollbarBackground}"
                            BorderThickness="0">
                        <ctrl:FrostyTabControl SelectedIndex="0">
                            <ctrl:FrostyTabControl.Items>
                                <ctrl:FrostyTabItem Header="Toolbox"
                                                    Icon="pack://application:,,,/FrostyEditor;component/Images/Database.png">
                                    <ctrl:FrostyTabItem.Content>
                                        <controls:FrostyClassSelector x:Name="ClassSelector"
                                                                      SelectedItemChanged="TypesList_OnSelectionChanged"
                                                                      ItemDoubleClicked="ToolboxClassSelector_OnItemDoubleClicked"/>
                                    </ctrl:FrostyTabItem.Content>
                                </ctrl:FrostyTabItem>
                                <ctrl:FrostyTabItem Header="Trans Toolbox"
                                                    Icon="pack://application:,,,/FrostyEditor;component/Images/ThreeD.png">
                                    <ctrl:FrostyTabItem.Content>
                                        <controls:FrostyClassSelector x:Name="TransientClassSelector"
                                                                      SelectedItemChanged="TransientClassSelector_OnSelectedItemChanged"
                                                                      ItemDoubleClicked="TransientClassSelector_OnItemDoubleClicked" />
                                    </ctrl:FrostyTabItem.Content>
                                </ctrl:FrostyTabItem>
                            </ctrl:FrostyTabControl.Items>
                        </ctrl:FrostyTabControl>
                    </Border>

                    <!--Documentation on the type-->
                    <Grid Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="19" />
                            <RowDefinition />
                        </Grid.RowDefinitions>

                        <Border Background="#454545">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="18" />
                                </Grid.ColumnDefinitions>

                                <TextBlock FontWeight="Bold" Margin="7 0 0 0" VerticalAlignment="Top"
                                           x:Name="DocBoxName" Foreground="{StaticResource FontColor}">
                                </TextBlock>
                                <Path Grid.Column="1" Fill="White" Width="11" Height="11"
                                      Data="m 4 9 h 2 v 2 H 4 Z M 1 4 V 1 H 2 V 0 H 8 V 1 H 9 V 6 H 8 V 7 H 6 V 8 H 4 V 6 H 5 V 5 H 7 V 2 H 3 v 2 z" />
                            </Grid>
                        </Border>

                        <Grid Grid.Row="1">
                            <TextBox Padding="4" IsReadOnly="True" VerticalScrollBarVisibility="Auto"
                                     TextWrapping="Wrap" x:Name="DocBoxText"
                                     Foreground="{StaticResource FontColor}">
                            </TextBox>
                        </Grid>
                    </Grid>
                </Grid>

                <Grid Grid.Column="2" x:Name="PropertyGrid" GotMouseCapture="BlueprintEditorWindow_OnGotFocus">
                    <ctrl:FrostyTabControl x:Name="PropertiesTabControl">

                    </ctrl:FrostyTabControl>
                </Grid>

                <!--This through what I presume to be black magic
            Allows the user to change the size of the Nodes window-->
                <GridSplitter Grid.Column="0"
                              Background="{StaticResource SubItemPressed}"
                              Width="3"
                              ResizeDirection="Columns" />
                <GridSplitter Grid.Column="1"
                              Background="{StaticResource SubItemPressed}"
                              Width="3"
                              ResizeDirection="Columns" />
            </Grid>
        </Border>

        <!--Header with buttons and status-->
        <Border Grid.Row="0" BorderBrush="{StaticResource SubItemPressed}" BorderThickness="1">
            <Border BorderBrush="{StaticResource SubMenuItemHighlight}" 
                    BorderThickness="0, 1, 0, 1">
                <Grid Background="{StaticResource ControlBackground}">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition />
                        <ColumnDefinition />
                        <ColumnDefinition Width="35" />
                    </Grid.ColumnDefinitions>

                    <!--Buttons-->
                    <StackPanel Grid.Column="0" Orientation="Horizontal" RenderOptions.EdgeMode="Aliased">
                        <!--Interaction Buttons-->
                        <Button x:Name="AddButton"
                                Width="20"
                                Height="20"
                                Margin="4,0,2,0"
                                HorizontalAlignment="Left"
                                Click="AddButton_OnClick"
                                ToolTip="Add a new node(Object) to the Blueprint">
                            <Image Source="pack://application:,,,/FrostyEditor;component/Images/Add.png"
                                   Width="20" />
                        </Button>
                        <Button x:Name="RemoveButton"
                                Width="20"
                                Height="20"
                                Margin="2,0,2,0"
                                HorizontalAlignment="Left"
                                Click="RemoveButton_OnClick"
                                ToolTip="Remove the selected node(s) from the Blueprint">
                            <Image Source="pack://application:,,,/FrostyEditor;component/Images/Remove.png"
                                   Width="20" />
                        </Button>
                        <Button x:Name="AutoMapButton"
                                Width="20"
                                Height="20"
                                Margin="2,0,4,0"
                                HorizontalAlignment="Left"
                                Click="AutoMapButton_OnClick"
                                ToolTip="Automatically generates a Node Mapping Config based off of the selected node">
                            <Image Source="pack://application:,,,/FrostyEditor;component/Images/Compile.png"
                                   Width="20" />
                        </Button>
                        <Button x:Name="RefreshMappingButton"
                                Width="20"
                                Height="20"
                                Margin="2,0,4,0"
                                HorizontalAlignment="Left"
                                Click="RefreshMappingButton_OnClick"
                                ToolTip="Refreshes all of the nodes in the current editor"
                                Visibility="Collapsed">
                            <Image Source="pack://application:,,,/BlueprintEditorPlugin;component/Images/Refresh.png"
                                   Width="20" />
                        </Button>

                        <Grid Background="{StaticResource SubMenuItemHighlight}" Width="1" />

                        <!--Organization Buttons-->
                        <Button x:Name="OrganizeButton"
                                Width="20"
                                Height="20"
                                Margin="4,0,2,0"
                                HorizontalAlignment="Left"
                                Click="OrganizeButton_OnClick"
                                ToolTip="Automatically organize the Blueprint's nodes">
                            <Image
                                Source="pack://application:,,,/BlueprintEditorPlugin;component/Images/AutoSortButton.png"
                                Width="20" />
                        </Button>

                        <Button x:Name="SaveOrganizationButton"
                                Width="20"
                                Height="20"
                                Margin="2,0,2,0"
                                HorizontalAlignment="Left"
                                Click="SaveOrganizationButton_OnClick"
                                ToolTip="Save the current layout">
                            <Image Source="pack://application:,,,/FrostyEditor;component/Images/Save.png"
                                   Width="20" />
                        </Button>

                        <Button x:Name="ImportOrganizationButton"
                                Width="20"
                                Height="20"
                                Margin="2,0,4,0"
                                HorizontalAlignment="Left"
                                Click="ImportOrganizationButton_OnClick"
                                ToolTip="Import a different layout">
                            <Image Source="pack://application:,,,/FrostyEditor;component/Images/Import.png"
                                   Width="20" />
                        </Button>

                        <Grid Background="{StaticResource SubMenuItemHighlight}" Width="1" />

                        <!--Visibility Buttons-->
                        <Button x:Name="ToolboxVisible"
                                Width="20"
                                Height="20"
                                Margin="4,0,2,0"
                                HorizontalAlignment="Left"
                                Click="ToolboxVisible_OnClick"
                                ToolTip="Open/Close the toolbox window">
                            <Image Source="/FrostyEditor;component/Images/Database.png"
                                   Width="20" />
                        </Button>
                        <Button x:Name="PropertyGridVisible"
                                Width="20"
                                Height="20"
                                Margin="2,0,2,0"
                                HorizontalAlignment="Left"
                                Click="PropertyGridVisible_OnClick"
                                ToolTip="Open/Close the property grid">
                            <Image Source="/FrostyEditor;component/Images/Properties.png"
                                   Width="20" />
                        </Button>
                        <Button x:Name="ControlsMenuVisible"
                                Width="20"
                                Height="20"
                                Margin="2,0,2,0"
                                HorizontalAlignment="Left"
                                Click="ControlsMenuVisible_OnClick"
                                ToolTip="View the list of controls for the editor">
                            <Image Source="/FrostyEditor;component/Images/EditLabel.png"
                                   Width="20" />
                        </Button>
                        <Button x:Name="PortMenuVisible"
                                Width="20"
                                Height="20"
                                Margin="2,0,2,0"
                                HorizontalAlignment="Left"
                                Click="PortMenuVisible_OnClick"
                                ToolTip="Add a port to the node">
                            <Image Source="/FrostyEditor;component/Images/More.png"
                                   Width="20" />
                        </Button>
                    </StackPanel>

                    <!--Status-->
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <Image x:Name="StatusGoodImage"
                               Source="/FrostyCore;component/Images/Tick.png"
                               Width="20" />
                        <Image x:Name="StatusBadImage"
                               Source="/FrostyCore;component/Images/Warning.png"
                               ToolTip="An unknown problem has been found with the blueprint"
                               Width="20"
                               Visibility="Collapsed" />
                        <Image x:Name="StatusOhShitImage"
                               Source="/FrostyCore;component/Images/Cross.png"
                               ToolTip="An unknown error has been found with the blueprint"
                               Width="20"
                               Visibility="Collapsed" />
                    </StackPanel>
                </Grid>
            </Border>
        </Border>
    </Grid>
</UserControl>